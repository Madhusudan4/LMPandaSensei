{"ast":null,"code":"var _jsxFileName = \"/Users/madhu.sudhan/Documents/logistics-chatbot/src/components/ChatInterface.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { queryGeminiAI } from '../services/aiService';\nimport { processDocument } from '../services/documentService';\nimport MessageItem from './MessageItem';\nimport LoadingIndicator from './LoadingIndicator';\nimport FileUpload from './FileUpload';\n\n// Add a fallback response function right in this component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst fallbackResponse = async message => {\n  // Wait a bit to simulate network delay\n  await new Promise(resolve => setTimeout(resolve, 800));\n\n  // Generate a contextual response about last mile logistics in India\n  const lowerMessage = message.toLowerCase();\n  if (lowerMessage.includes(\"hello\") || lowerMessage.includes(\"hi\")) {\n    return \"Hello! How can I help you with your last mile logistics needs in India today?\";\n  } else if (lowerMessage.includes(\"track\") || lowerMessage.includes(\"order\")) {\n    return \"To track your order in our Indian logistics network, I'll need the tracking number or order ID. Could you provide that information?\";\n  } else if (lowerMessage.includes(\"delivery\") || lowerMessage.includes(\"shipping\")) {\n    return \"Our last mile logistics network covers all of India, including remote areas. We offer various delivery options including same-day, next-day, and standard delivery. What specific information do you need about our services?\";\n  } else if (lowerMessage.includes(\"document\") || lowerMessage.includes(\"upload\")) {\n    return \"You can upload shipping manifests, invoices, or other logistics documents using the paperclip icon. I'll analyze them and help you with any related questions about your logistics operations in India.\";\n  } else if (lowerMessage.includes(\"cost\") || lowerMessage.includes(\"price\") || lowerMessage.includes(\"rate\")) {\n    return \"Our delivery rates in India depend on distance, package size, weight, and delivery speed. For a specific quote, could you provide more details about your shipment?\";\n  } else if (lowerMessage.includes(\"area\") || lowerMessage.includes(\"region\") || lowerMessage.includes(\"city\")) {\n    return \"We provide last mile logistics services across all major cities and rural areas in India, including Delhi, Mumbai, Bangalore, Hyderabad, Chennai, Kolkata, and their surrounding regions. Which specific area are you inquiring about?\";\n  } else {\n    return \"Thank you for your message about last mile logistics in India. I can help with tracking, delivery options, shipping costs, and coverage areas. What specific information are you looking for?\";\n  }\n};\nconst ChatInterface = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [isUploading, setIsUploading] = useState(false);\n  const messagesEndRef = useRef(null);\n  const scrollToBottom = () => {\n    if (messagesEndRef.current) {\n      messagesEndRef.current.scrollIntoView({\n        behavior: \"smooth\"\n      });\n    }\n  };\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  useEffect(() => {\n    // Add initial greeting message\n    setMessages([{\n      text: \"Hello! I'm your Last Mile Logistics assistant for India. Ask me anything about deliveries, transportation, or upload relevant documents to enhance my knowledge.\",\n      isUser: false,\n      timestamp: new Date().toISOString()\n    }]);\n  }, []);\n  const handleSend = async () => {\n    if (input.trim() === '' || isLoading) return;\n    const userMessage = {\n      text: input,\n      isUser: true,\n      timestamp: new Date().toISOString()\n    };\n\n    // Save user input before clearing the input field\n    const userInput = input;\n    setMessages(prev => [...prev, userMessage]);\n    setInput('');\n    setIsLoading(true);\n    try {\n      let response;\n      try {\n        // First try the real Gemini API\n        console.log(\"Attempting to call Gemini API...\");\n        response = await queryGeminiAI(userInput);\n        console.log(\"Received response from Gemini API:\", response);\n      } catch (apiError) {\n        console.error(\"Gemini API error:\", apiError);\n\n        // If that fails, use the fallback in development mode\n        if (process.env.NODE_ENV === 'development') {\n          console.log(\"Using fallback response mechanism\");\n          response = await fallbackResponse(userInput);\n        } else {\n          // In production, still show the error to the user\n          throw apiError;\n        }\n      }\n      const botMessage = {\n        text: response,\n        isUser: false,\n        timestamp: new Date().toISOString()\n      };\n      setMessages(prev => [...prev, botMessage]);\n    } catch (error) {\n      console.error(\"Error getting response:\", error);\n      const errorMessage = {\n        text: \"I'm having trouble processing your request right now. Please try again later.\",\n        isUser: false,\n        isError: true,\n        timestamp: new Date().toISOString()\n      };\n      setMessages(prev => [...prev, errorMessage]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleFileUpload = async file => {\n    if (!file) return;\n    setIsUploading(true);\n    const uploadMessage = {\n      text: `Uploading document: ${file.name}`,\n      isUser: true,\n      isFile: true,\n      timestamp: new Date().toISOString()\n    };\n    setMessages(prev => [...prev, uploadMessage]);\n    try {\n      const numChunks = await processDocument(file);\n      const successMessage = {\n        text: `I've processed your document \"${file.name}\" and extracted ${numChunks} sections of information. You can now ask me questions about its content!`,\n        isUser: false,\n        timestamp: new Date().toISOString()\n      };\n      setMessages(prev => [...prev, successMessage]);\n    } catch (error) {\n      console.error(\"Error processing document:\", error);\n      const errorMessage = {\n        text: `I had trouble processing the document \"${file.name}\". Please make sure it's a PDF file and try again.`,\n        isUser: false,\n        isError: true,\n        timestamp: new Date().toISOString()\n      };\n      setMessages(prev => [...prev, errorMessage]);\n    } finally {\n      setIsUploading(false);\n    }\n  };\n\n  // Rest of the component remains the same\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col h-screen bg-white\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"bg-black p-4 text-white\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-xl font-bold\",\n        children: \"Last Mile Logistics Assistant\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-xs text-gray-400\",\n        children: \"Specializing in Indian logistics solutions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 overflow-auto p-4 space-y-4\",\n      children: [messages.map((msg, i) => /*#__PURE__*/_jsxDEV(MessageItem, {\n        message: msg\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 11\n      }, this)), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-start\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-gray-200 text-black p-3 rounded-lg rounded-bl-none\",\n          children: /*#__PURE__*/_jsxDEV(LoadingIndicator, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"border-t border-gray-300 p-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center\",\n        children: [/*#__PURE__*/_jsxDEV(FileUpload, {\n          onFileSelect: handleFileUpload,\n          isUploading: isUploading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"flex-1 border-0 bg-gray-100 rounded-full px-4 py-2 mx-2 focus:outline-none focus:ring-2 focus:ring-red-500\",\n          placeholder: \"Ask about last mile logistics...\",\n          value: input,\n          onChange: e => setInput(e.target.value),\n          onKeyDown: e => e.key === 'Enter' && !e.shiftKey && handleSend(),\n          disabled: isLoading || isUploading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `p-2 rounded-full focus:outline-none ${isLoading || isUploading || input.trim() === '' ? 'bg-gray-300 text-gray-500 cursor-not-allowed' : 'bg-red-600 text-white hover:bg-red-700'}`,\n          onClick: handleSend,\n          disabled: isLoading || isUploading || input.trim() === '',\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            xmlns: \"http://www.w3.org/2000/svg\",\n            className: \"h-5 w-5\",\n            viewBox: \"0 0 20 20\",\n            fill: \"currentColor\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              fillRule: \"evenodd\",\n              d: \"M10.293 3.293a1 1 0 011.414 0l6 6a1 1 0 010 1.414l-6 6a1 1 0 01-1.414-1.414L14.586 11H3a1 1 0 110-2h11.586l-4.293-4.293a1 1 0 010-1.414z\",\n              clipRule: \"evenodd\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 161,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatInterface, \"NuAGLXyZ+elx7rFj6s+2oshVafs=\");\n_c = ChatInterface;\nexport default ChatInterface;\nvar _c;\n$RefreshReg$(_c, \"ChatInterface\");","map":{"version":3,"names":["React","useState","useRef","useEffect","queryGeminiAI","processDocument","MessageItem","LoadingIndicator","FileUpload","jsxDEV","_jsxDEV","fallbackResponse","message","Promise","resolve","setTimeout","lowerMessage","toLowerCase","includes","ChatInterface","_s","messages","setMessages","input","setInput","isLoading","setIsLoading","isUploading","setIsUploading","messagesEndRef","scrollToBottom","current","scrollIntoView","behavior","text","isUser","timestamp","Date","toISOString","handleSend","trim","userMessage","userInput","prev","response","console","log","apiError","error","process","env","NODE_ENV","botMessage","errorMessage","isError","handleFileUpload","file","uploadMessage","name","isFile","numChunks","successMessage","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","i","ref","onFileSelect","placeholder","value","onChange","e","target","onKeyDown","key","shiftKey","disabled","onClick","xmlns","viewBox","fill","fillRule","d","clipRule","_c","$RefreshReg$"],"sources":["/Users/madhu.sudhan/Documents/logistics-chatbot/src/components/ChatInterface.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { queryGeminiAI } from '../services/aiService';\nimport { processDocument } from '../services/documentService';\nimport MessageItem from './MessageItem';\nimport LoadingIndicator from './LoadingIndicator';\nimport FileUpload from './FileUpload';\n\n// Add a fallback response function right in this component\nconst fallbackResponse = async (message) => {\n  // Wait a bit to simulate network delay\n  await new Promise(resolve => setTimeout(resolve, 800));\n  \n  // Generate a contextual response about last mile logistics in India\n  const lowerMessage = message.toLowerCase();\n  \n  if (lowerMessage.includes(\"hello\") || lowerMessage.includes(\"hi\")) {\n    return \"Hello! How can I help you with your last mile logistics needs in India today?\";\n  } else if (lowerMessage.includes(\"track\") || lowerMessage.includes(\"order\")) {\n    return \"To track your order in our Indian logistics network, I'll need the tracking number or order ID. Could you provide that information?\";\n  } else if (lowerMessage.includes(\"delivery\") || lowerMessage.includes(\"shipping\")) {\n    return \"Our last mile logistics network covers all of India, including remote areas. We offer various delivery options including same-day, next-day, and standard delivery. What specific information do you need about our services?\";\n  } else if (lowerMessage.includes(\"document\") || lowerMessage.includes(\"upload\")) {\n    return \"You can upload shipping manifests, invoices, or other logistics documents using the paperclip icon. I'll analyze them and help you with any related questions about your logistics operations in India.\";\n  } else if (lowerMessage.includes(\"cost\") || lowerMessage.includes(\"price\") || lowerMessage.includes(\"rate\")) {\n    return \"Our delivery rates in India depend on distance, package size, weight, and delivery speed. For a specific quote, could you provide more details about your shipment?\";\n  } else if (lowerMessage.includes(\"area\") || lowerMessage.includes(\"region\") || lowerMessage.includes(\"city\")) {\n    return \"We provide last mile logistics services across all major cities and rural areas in India, including Delhi, Mumbai, Bangalore, Hyderabad, Chennai, Kolkata, and their surrounding regions. Which specific area are you inquiring about?\";\n  } else {\n    return \"Thank you for your message about last mile logistics in India. I can help with tracking, delivery options, shipping costs, and coverage areas. What specific information are you looking for?\";\n  }\n};\n\nconst ChatInterface = () => {\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [isUploading, setIsUploading] = useState(false);\n  const messagesEndRef = useRef(null);\n\n  const scrollToBottom = () => {\n    if (messagesEndRef.current) {\n      messagesEndRef.current.scrollIntoView({ behavior: \"smooth\" });\n    }\n  };\n  \n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  useEffect(() => {\n    // Add initial greeting message\n    setMessages([{\n      text: \"Hello! I'm your Last Mile Logistics assistant for India. Ask me anything about deliveries, transportation, or upload relevant documents to enhance my knowledge.\",\n      isUser: false,\n      timestamp: new Date().toISOString()\n    }]);\n  }, []);\n\n  const handleSend = async () => {\n    if (input.trim() === '' || isLoading) return;\n    \n    const userMessage = {\n      text: input,\n      isUser: true,\n      timestamp: new Date().toISOString()\n    };\n    \n    // Save user input before clearing the input field\n    const userInput = input;\n    \n    setMessages(prev => [...prev, userMessage]);\n    setInput('');\n    setIsLoading(true);\n    \n    try {\n      let response;\n      \n      try {\n        // First try the real Gemini API\n        console.log(\"Attempting to call Gemini API...\");\n        response = await queryGeminiAI(userInput);\n        console.log(\"Received response from Gemini API:\", response);\n      } catch (apiError) {\n        console.error(\"Gemini API error:\", apiError);\n        \n        // If that fails, use the fallback in development mode\n        if (process.env.NODE_ENV === 'development') {\n          console.log(\"Using fallback response mechanism\");\n          response = await fallbackResponse(userInput);\n        } else {\n          // In production, still show the error to the user\n          throw apiError;\n        }\n      }\n      \n      const botMessage = {\n        text: response,\n        isUser: false,\n        timestamp: new Date().toISOString()\n      };\n      \n      setMessages(prev => [...prev, botMessage]);\n    } catch (error) {\n      console.error(\"Error getting response:\", error);\n      \n      const errorMessage = {\n        text: \"I'm having trouble processing your request right now. Please try again later.\",\n        isUser: false,\n        isError: true,\n        timestamp: new Date().toISOString()\n      };\n      \n      setMessages(prev => [...prev, errorMessage]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleFileUpload = async (file) => {\n    if (!file) return;\n    \n    setIsUploading(true);\n    \n    const uploadMessage = {\n      text: `Uploading document: ${file.name}`,\n      isUser: true,\n      isFile: true,\n      timestamp: new Date().toISOString()\n    };\n    \n    setMessages(prev => [...prev, uploadMessage]);\n    \n    try {\n      const numChunks = await processDocument(file);\n      \n      const successMessage = {\n        text: `I've processed your document \"${file.name}\" and extracted ${numChunks} sections of information. You can now ask me questions about its content!`,\n        isUser: false,\n        timestamp: new Date().toISOString()\n      };\n      \n      setMessages(prev => [...prev, successMessage]);\n    } catch (error) {\n      console.error(\"Error processing document:\", error);\n      \n      const errorMessage = {\n        text: `I had trouble processing the document \"${file.name}\". Please make sure it's a PDF file and try again.`,\n        isUser: false,\n        isError: true,\n        timestamp: new Date().toISOString()\n      };\n      \n      setMessages(prev => [...prev, errorMessage]);\n    } finally {\n      setIsUploading(false);\n    }\n  };\n\n  // Rest of the component remains the same\n  return (\n    <div className=\"flex flex-col h-screen bg-white\">\n      {/* Header */}\n      <header className=\"bg-black p-4 text-white\">\n        <h1 className=\"text-xl font-bold\">Last Mile Logistics Assistant</h1>\n        <p className=\"text-xs text-gray-400\">Specializing in Indian logistics solutions</p>\n      </header>\n      \n      {/* Chat Messages Area */}\n      <div className=\"flex-1 overflow-auto p-4 space-y-4\">\n        {messages.map((msg, i) => (\n          <MessageItem key={i} message={msg} />\n        ))}\n        \n        {isLoading && \n          <div className=\"flex justify-start\">\n            <div className=\"bg-gray-200 text-black p-3 rounded-lg rounded-bl-none\">\n              <LoadingIndicator />\n            </div>\n          </div>\n        }\n        \n        <div ref={messagesEndRef} />\n      </div>\n      \n      {/* Input Area */}\n      <div className=\"border-t border-gray-300 p-4\">\n        <div className=\"flex items-center\">\n          <FileUpload \n            onFileSelect={handleFileUpload} \n            isUploading={isUploading} \n          />\n          \n          <input \n            className=\"flex-1 border-0 bg-gray-100 rounded-full px-4 py-2 mx-2 focus:outline-none focus:ring-2 focus:ring-red-500\"\n            placeholder=\"Ask about last mile logistics...\"\n            value={input}\n            onChange={(e) => setInput(e.target.value)}\n            onKeyDown={(e) => e.key === 'Enter' && !e.shiftKey && handleSend()}\n            disabled={isLoading || isUploading}\n          />\n          \n          <button \n            className={`p-2 rounded-full focus:outline-none ${\n              isLoading || isUploading || input.trim() === '' \n                ? 'bg-gray-300 text-gray-500 cursor-not-allowed' \n                : 'bg-red-600 text-white hover:bg-red-700'\n            }`}\n            onClick={handleSend}\n            disabled={isLoading || isUploading || input.trim() === ''}\n          >\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n              <path fillRule=\"evenodd\" d=\"M10.293 3.293a1 1 0 011.414 0l6 6a1 1 0 010 1.414l-6 6a1 1 0 01-1.414-1.414L14.586 11H3a1 1 0 110-2h11.586l-4.293-4.293a1 1 0 010-1.414z\" clipRule=\"evenodd\" />\n            </svg>\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ChatInterface;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAC1D,SAASC,aAAa,QAAQ,uBAAuB;AACrD,SAASC,eAAe,QAAQ,6BAA6B;AAC7D,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,gBAAgB,MAAM,oBAAoB;AACjD,OAAOC,UAAU,MAAM,cAAc;;AAErC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,gBAAgB,GAAG,MAAOC,OAAO,IAAK;EAC1C;EACA,MAAM,IAAIC,OAAO,CAACC,OAAO,IAAIC,UAAU,CAACD,OAAO,EAAE,GAAG,CAAC,CAAC;;EAEtD;EACA,MAAME,YAAY,GAAGJ,OAAO,CAACK,WAAW,CAAC,CAAC;EAE1C,IAAID,YAAY,CAACE,QAAQ,CAAC,OAAO,CAAC,IAAIF,YAAY,CAACE,QAAQ,CAAC,IAAI,CAAC,EAAE;IACjE,OAAO,+EAA+E;EACxF,CAAC,MAAM,IAAIF,YAAY,CAACE,QAAQ,CAAC,OAAO,CAAC,IAAIF,YAAY,CAACE,QAAQ,CAAC,OAAO,CAAC,EAAE;IAC3E,OAAO,qIAAqI;EAC9I,CAAC,MAAM,IAAIF,YAAY,CAACE,QAAQ,CAAC,UAAU,CAAC,IAAIF,YAAY,CAACE,QAAQ,CAAC,UAAU,CAAC,EAAE;IACjF,OAAO,+NAA+N;EACxO,CAAC,MAAM,IAAIF,YAAY,CAACE,QAAQ,CAAC,UAAU,CAAC,IAAIF,YAAY,CAACE,QAAQ,CAAC,QAAQ,CAAC,EAAE;IAC/E,OAAO,yMAAyM;EAClN,CAAC,MAAM,IAAIF,YAAY,CAACE,QAAQ,CAAC,MAAM,CAAC,IAAIF,YAAY,CAACE,QAAQ,CAAC,OAAO,CAAC,IAAIF,YAAY,CAACE,QAAQ,CAAC,MAAM,CAAC,EAAE;IAC3G,OAAO,qKAAqK;EAC9K,CAAC,MAAM,IAAIF,YAAY,CAACE,QAAQ,CAAC,MAAM,CAAC,IAAIF,YAAY,CAACE,QAAQ,CAAC,QAAQ,CAAC,IAAIF,YAAY,CAACE,QAAQ,CAAC,MAAM,CAAC,EAAE;IAC5G,OAAO,wOAAwO;EACjP,CAAC,MAAM;IACL,OAAO,+LAA+L;EACxM;AACF,CAAC;AAED,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACsB,KAAK,EAAEC,QAAQ,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACwB,SAAS,EAAEC,YAAY,CAAC,GAAGzB,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAAC0B,WAAW,EAAEC,cAAc,CAAC,GAAG3B,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM4B,cAAc,GAAG3B,MAAM,CAAC,IAAI,CAAC;EAEnC,MAAM4B,cAAc,GAAGA,CAAA,KAAM;IAC3B,IAAID,cAAc,CAACE,OAAO,EAAE;MAC1BF,cAAc,CAACE,OAAO,CAACC,cAAc,CAAC;QAAEC,QAAQ,EAAE;MAAS,CAAC,CAAC;IAC/D;EACF,CAAC;EAED9B,SAAS,CAAC,MAAM;IACd2B,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,CAACT,QAAQ,CAAC,CAAC;EAEdlB,SAAS,CAAC,MAAM;IACd;IACAmB,WAAW,CAAC,CAAC;MACXY,IAAI,EAAE,kKAAkK;MACxKC,MAAM,EAAE,KAAK;MACbC,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;IACpC,CAAC,CAAC,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAIhB,KAAK,CAACiB,IAAI,CAAC,CAAC,KAAK,EAAE,IAAIf,SAAS,EAAE;IAEtC,MAAMgB,WAAW,GAAG;MAClBP,IAAI,EAAEX,KAAK;MACXY,MAAM,EAAE,IAAI;MACZC,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;IACpC,CAAC;;IAED;IACA,MAAMI,SAAS,GAAGnB,KAAK;IAEvBD,WAAW,CAACqB,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAEF,WAAW,CAAC,CAAC;IAC3CjB,QAAQ,CAAC,EAAE,CAAC;IACZE,YAAY,CAAC,IAAI,CAAC;IAElB,IAAI;MACF,IAAIkB,QAAQ;MAEZ,IAAI;QACF;QACAC,OAAO,CAACC,GAAG,CAAC,kCAAkC,CAAC;QAC/CF,QAAQ,GAAG,MAAMxC,aAAa,CAACsC,SAAS,CAAC;QACzCG,OAAO,CAACC,GAAG,CAAC,oCAAoC,EAAEF,QAAQ,CAAC;MAC7D,CAAC,CAAC,OAAOG,QAAQ,EAAE;QACjBF,OAAO,CAACG,KAAK,CAAC,mBAAmB,EAAED,QAAQ,CAAC;;QAE5C;QACA,IAAIE,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,aAAa,EAAE;UAC1CN,OAAO,CAACC,GAAG,CAAC,mCAAmC,CAAC;UAChDF,QAAQ,GAAG,MAAMjC,gBAAgB,CAAC+B,SAAS,CAAC;QAC9C,CAAC,MAAM;UACL;UACA,MAAMK,QAAQ;QAChB;MACF;MAEA,MAAMK,UAAU,GAAG;QACjBlB,IAAI,EAAEU,QAAQ;QACdT,MAAM,EAAE,KAAK;QACbC,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;MACpC,CAAC;MAEDhB,WAAW,CAACqB,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAES,UAAU,CAAC,CAAC;IAC5C,CAAC,CAAC,OAAOJ,KAAK,EAAE;MACdH,OAAO,CAACG,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MAE/C,MAAMK,YAAY,GAAG;QACnBnB,IAAI,EAAE,+EAA+E;QACrFC,MAAM,EAAE,KAAK;QACbmB,OAAO,EAAE,IAAI;QACblB,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;MACpC,CAAC;MAEDhB,WAAW,CAACqB,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAEU,YAAY,CAAC,CAAC;IAC9C,CAAC,SAAS;MACR3B,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;EAED,MAAM6B,gBAAgB,GAAG,MAAOC,IAAI,IAAK;IACvC,IAAI,CAACA,IAAI,EAAE;IAEX5B,cAAc,CAAC,IAAI,CAAC;IAEpB,MAAM6B,aAAa,GAAG;MACpBvB,IAAI,EAAE,uBAAuBsB,IAAI,CAACE,IAAI,EAAE;MACxCvB,MAAM,EAAE,IAAI;MACZwB,MAAM,EAAE,IAAI;MACZvB,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;IACpC,CAAC;IAEDhB,WAAW,CAACqB,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAEc,aAAa,CAAC,CAAC;IAE7C,IAAI;MACF,MAAMG,SAAS,GAAG,MAAMvD,eAAe,CAACmD,IAAI,CAAC;MAE7C,MAAMK,cAAc,GAAG;QACrB3B,IAAI,EAAE,iCAAiCsB,IAAI,CAACE,IAAI,mBAAmBE,SAAS,2EAA2E;QACvJzB,MAAM,EAAE,KAAK;QACbC,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;MACpC,CAAC;MAEDhB,WAAW,CAACqB,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAEkB,cAAc,CAAC,CAAC;IAChD,CAAC,CAAC,OAAOb,KAAK,EAAE;MACdH,OAAO,CAACG,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MAElD,MAAMK,YAAY,GAAG;QACnBnB,IAAI,EAAE,0CAA0CsB,IAAI,CAACE,IAAI,oDAAoD;QAC7GvB,MAAM,EAAE,KAAK;QACbmB,OAAO,EAAE,IAAI;QACblB,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;MACpC,CAAC;MAEDhB,WAAW,CAACqB,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAEU,YAAY,CAAC,CAAC;IAC9C,CAAC,SAAS;MACRzB,cAAc,CAAC,KAAK,CAAC;IACvB;EACF,CAAC;;EAED;EACA,oBACElB,OAAA;IAAKoD,SAAS,EAAC,iCAAiC;IAAAC,QAAA,gBAE9CrD,OAAA;MAAQoD,SAAS,EAAC,yBAAyB;MAAAC,QAAA,gBACzCrD,OAAA;QAAIoD,SAAS,EAAC,mBAAmB;QAAAC,QAAA,EAAC;MAA6B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACpEzD,OAAA;QAAGoD,SAAS,EAAC,uBAAuB;QAAAC,QAAA,EAAC;MAA0C;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7E,CAAC,eAGTzD,OAAA;MAAKoD,SAAS,EAAC,oCAAoC;MAAAC,QAAA,GAChD1C,QAAQ,CAAC+C,GAAG,CAAC,CAACC,GAAG,EAAEC,CAAC,kBACnB5D,OAAA,CAACJ,WAAW;QAASM,OAAO,EAAEyD;MAAI,GAAhBC,CAAC;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAiB,CACrC,CAAC,EAED1C,SAAS,iBACRf,OAAA;QAAKoD,SAAS,EAAC,oBAAoB;QAAAC,QAAA,eACjCrD,OAAA;UAAKoD,SAAS,EAAC,uDAAuD;UAAAC,QAAA,eACpErD,OAAA,CAACH,gBAAgB;YAAAyD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eAGRzD,OAAA;QAAK6D,GAAG,EAAE1C;MAAe;QAAAmC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzB,CAAC,eAGNzD,OAAA;MAAKoD,SAAS,EAAC,8BAA8B;MAAAC,QAAA,eAC3CrD,OAAA;QAAKoD,SAAS,EAAC,mBAAmB;QAAAC,QAAA,gBAChCrD,OAAA,CAACF,UAAU;UACTgE,YAAY,EAAEjB,gBAAiB;UAC/B5B,WAAW,EAAEA;QAAY;UAAAqC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC1B,CAAC,eAEFzD,OAAA;UACEoD,SAAS,EAAC,4GAA4G;UACtHW,WAAW,EAAC,kCAAkC;UAC9CC,KAAK,EAAEnD,KAAM;UACboD,QAAQ,EAAGC,CAAC,IAAKpD,QAAQ,CAACoD,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;UAC1CI,SAAS,EAAGF,CAAC,IAAKA,CAAC,CAACG,GAAG,KAAK,OAAO,IAAI,CAACH,CAAC,CAACI,QAAQ,IAAIzC,UAAU,CAAC,CAAE;UACnE0C,QAAQ,EAAExD,SAAS,IAAIE;QAAY;UAAAqC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpC,CAAC,eAEFzD,OAAA;UACEoD,SAAS,EAAE,uCACTrC,SAAS,IAAIE,WAAW,IAAIJ,KAAK,CAACiB,IAAI,CAAC,CAAC,KAAK,EAAE,GAC3C,8CAA8C,GAC9C,wCAAwC,EAC3C;UACH0C,OAAO,EAAE3C,UAAW;UACpB0C,QAAQ,EAAExD,SAAS,IAAIE,WAAW,IAAIJ,KAAK,CAACiB,IAAI,CAAC,CAAC,KAAK,EAAG;UAAAuB,QAAA,eAE1DrD,OAAA;YAAKyE,KAAK,EAAC,4BAA4B;YAACrB,SAAS,EAAC,SAAS;YAACsB,OAAO,EAAC,WAAW;YAACC,IAAI,EAAC,cAAc;YAAAtB,QAAA,eACjGrD,OAAA;cAAM4E,QAAQ,EAAC,SAAS;cAACC,CAAC,EAAC,0IAA0I;cAACC,QAAQ,EAAC;YAAS;cAAAxB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACxL;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC/C,EAAA,CA1LID,aAAa;AAAAsE,EAAA,GAAbtE,aAAa;AA4LnB,eAAeA,aAAa;AAAC,IAAAsE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}